(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{100:function(e,t,s){"use strict";s.r(t),s.d(t,"frontMatter",(function(){return r})),s.d(t,"metadata",(function(){return i})),s.d(t,"rightToc",(function(){return c})),s.d(t,"default",(function(){return b}));var n=s(1),a=s(6),o=(s(0),s(145)),r={id:"how-to-style",title:"How to style",sidebar_label:"How to style"},i={id:"how-to-style",title:"How to style",description:"## Override existing css classes\r",source:"@site/docs\\how-to-style.md",permalink:"/react-toastify/how-to-style",editUrl:"https://github.com/shivanshBTW/material-react-toastify-doc/edit/master/docs/how-to-style.md",sidebar_label:"How to style",sidebar:"someSidebar",previous:{title:"Lazy container and multi-container",permalink:"/react-toastify/lazy-container-and-multi-container"},next:{title:"Dispatch toast outside of react component",permalink:"/react-toastify/dispatch-toast-outside-of-react-component"}},c=[{value:"Override existing css classes",id:"override-existing-css-classes",children:[]},{value:"Build your own style using the scss files",id:"build-your-own-style-using-the-scss-files",children:[]},{value:"Passing css classes to component",id:"passing-css-classes-to-component",children:[]},{value:"Css classes as function",id:"css-classes-as-function",children:[]},{value:"How to style with styled-components",id:"how-to-style-with-styled-components",children:[{value:"Extend existing css classes",id:"extend-existing-css-classes",children:[]},{value:"Pass css classes to props",id:"pass-css-classes-to-props",children:[]}]},{value:"Styling from scratch",id:"styling-from-scratch",children:[]},{value:"Mobile",id:"mobile",children:[]}],l={rightToc:c};function b(e){var t=e.components,s=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,s,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"override-existing-css-classes"},"Override existing css classes"),Object(o.b)("p",null,"The most straightforward way to apply your own style would be to override the existing CSS classes. Below, a list of the CSS classes used(classes used for animation and media query are omitted)"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),"/** Used to define container behavior: width, position: fixed etc... **/\n.Toastify__toast-container {\n}\n\n/** Used to define the position of the ToastContainer **/\n.Toastify__toast-container--top-left {\n}\n.Toastify__toast-container--top-center {\n}\n.Toastify__toast-container--top-right {\n}\n.Toastify__toast-container--bottom-left {\n}\n.Toastify__toast-container--bottom-center {\n}\n.Toastify__toast-container--bottom-right {\n}\n\n/** Classes for the displayed toast **/\n.Toastify__toast {\n}\n.Toastify__toast--rtl {\n}\n.Toastify__toast--dark {\n}\n.Toastify__toast--default {\n}\n.Toastify__toast--info {\n}\n.Toastify__toast--success {\n}\n.Toastify__toast--warning {\n}\n.Toastify__toast--error {\n}\n.Toastify__toast-body {\n}\n\n/** Classes for the close button. Better use your own closeButton **/\n.Toastify__close-button {\n}\n.Toastify__close-button--default {\n}\n.Toastify__close-button > svg {\n}\n.Toastify__close-button:hover, .Toastify__close-button:focus {\n}\n\n/** Classes for the progress bar **/\n.Toastify__progress-bar {\n}\n.Toastify__progress-bar--animated {\n}\n.Toastify__progress-bar--controlled {\n}\n.Toastify__progress-bar--rtl {\n}\n.Toastify__progress-bar--default {\n}\n.Toastify__progress-bar--dark {\n}\n")),Object(o.b)("h2",{id:"build-your-own-style-using-the-scss-files"},"Build your own style using the scss files"),Object(o.b)("p",null,"Grab the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/shivanshBTW/material-react-toastify/tree/master/scss"}),"scss directory")," of the repository and build your own stylesheet. If you just want to changes some colors most of them are defined inside the ",Object(o.b)("inlineCode",{parentName:"p"},"_variables.scss")," file."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"scss\n\u251c\u2500\u2500 _closeButton.scss\n\u251c\u2500\u2500 _progressBar.scss\n\u251c\u2500\u2500 _toast.scss\n\u251c\u2500\u2500 _toastContainer.scss\n\u251c\u2500\u2500 _variables.scss\n\u251c\u2500\u2500 \ud83d\udcc1 animations\n\u2502  \u251c\u2500\u2500 _bounce.scss\n\u2502  \u251c\u2500\u2500 _flip.scss\n\u2502  \u251c\u2500\u2500 _slide.scss\n\u2502  \u2514\u2500\u2500 _zoom.scss\n\u251c\u2500\u2500 main.scss\n\u2514\u2500\u2500 minimal.scss\n")),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Info")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"  You built an amazing theme and you want to share it with the community, please let me know. Contributions are welcome!"))),Object(o.b)("h2",{id:"passing-css-classes-to-component"},"Passing css classes to component"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"ToastContainer")," accept the following props for styling:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"className: applied to the container"),Object(o.b)("li",{parentName:"ul"},"toastClassName: applied on the toast wrapper"),Object(o.b)("li",{parentName:"ul"},"bodyClassName: applied on the toast body"),Object(o.b)("li",{parentName:"ul"},"progressClassName: applied on the progress bar"),Object(o.b)("li",{parentName:"ul"},"style: inline style applied to the container")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<ToastContainer className="foo" style={{ width: "2000px" }} />\n')),Object(o.b)("p",null,"When displaying a notification you can also set some css classes:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"className: applied on the toast wrapper (this override ",Object(o.b)("inlineCode",{parentName:"li"},"toastClassName")," is set by the container )"),Object(o.b)("li",{parentName:"ul"},"bodyClassName: applied on the toast body (this override ",Object(o.b)("inlineCode",{parentName:"li"},"bodyClassName")," is set by the container )"),Object(o.b)("li",{parentName:"ul"},"progressClassName: applied on the progress bar (this override ",Object(o.b)("inlineCode",{parentName:"li"},"progressClassName")," is set by the container )"),Object(o.b)("li",{parentName:"ul"},"style: inline style applied to the toast")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toast(\"Custom style\",{\n  className: 'black-background',\n  bodyClassName: \"grow-font-size\",\n  progressClassName: 'fancy-progress-bar'\n});\n")),Object(o.b)("h2",{id:"css-classes-as-function"},"Css classes as function"),Object(o.b)("p",null,"You can also provide a function. This is what it looks like with tailwind css"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'const contextClass = {\n  success: "bg-blue-600",\n  error: "bg-red-600",\n  info: "bg-gray-600",\n  warning: "bg-orange-400",\n  default: "bg-indigo-600",\n  dark: "bg-white-600 font-gray-300",\n};\n\nconst App = ()=> {\n  return (\n   <Main />\n   <ToastContainer\n      toastClassName={({ type }) => contextClass[type || "default"] + \n        " flex p-1 min-h-10 rounded-md justify-between overflow-hidden cursor-pointer"\n      }\n      bodyClassName={() => "text-sm font-white font-med block p-3"}\n      position="bottom-left"\n      autoClose={3000}\n    />\n  )\n}\n')),Object(o.b)("h2",{id:"how-to-style-with-styled-components"},"How to style with styled-components"),Object(o.b)("h3",{id:"extend-existing-css-classes"},"Extend existing css classes"),Object(o.b)("p",null,"You can override the css classes with ",Object(o.b)("inlineCode",{parentName:"p"},"styled-components"),". You can find the list of the css classes used ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/how-to-style#override-existing-css-classes"}),"here"),". This is where you will also define the style for your notification."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport styled from 'styled-components';\nimport { ToastContainer } from 'material-react-toastify';\n\nconst StyledContainer = styled(WrappedToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {}\n  .Toastify__toast {}\n  .Toastify__toast--error {}\n  .Toastify__toast--warning {}\n  .Toastify__toast--success {}\n  .Toastify__toast-body {}\n  .Toastify__progress-bar {}\n`;\n\n")),Object(o.b)("h3",{id:"pass-css-classes-to-props"},"Pass css classes to props"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"const StyledToastContainer = styled(ToastContainer).attrs({\n  className: 'toast-container',\n  toastClassName: 'toast',\n  bodyClassName: 'body',\n  progressClassName: 'progress',\n})`\n  /* .toast-container */\n  width: 100%;\n\n   /* .toast is passed to toastClassName */\n  .toast {\n    background-color: var(--color-black);\n  }\n\n  button[aria-label=\"close\"] {\n    display: none;\n  }\n\n  /* .body is passed to bodyClassName */\n  .body {}\n\n  /* .progress is passed to progressClassName */\n  .progress {}\n`;\n")),Object(o.b)("h2",{id:"styling-from-scratch"},"Styling from scratch"),Object(o.b)("p",null,"If you want to style from scratch simply include the bare minimum style and you are good to go."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import 'material-react-toastify/dist/ReactToastify.minimal.css';\n")),Object(o.b)("h2",{id:"mobile"},"Mobile"),Object(o.b)("p",null,"On mobile, the toast will take all the available width."),Object(o.b)("p",null,Object(o.b)("img",Object(n.a)({parentName:"p"},{src:"https://user-images.githubusercontent.com/5574267/28754040-ae7195ea-753d-11e7-86e1-f23c5e6bc531.gif",alt:"react toastiy mobile"}))))}b.isMDXComponent=!0},145:function(e,t,s){"use strict";s.d(t,"a",(function(){return p})),s.d(t,"b",(function(){return m}));var n=s(0),a=s.n(n);function o(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function r(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function i(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?r(Object(s),!0).forEach((function(t){o(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):r(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function c(e,t){if(null==e)return{};var s,n,a=function(e,t){if(null==e)return{};var s,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)s=o[n],t.indexOf(s)>=0||(a[s]=e[s]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)s=o[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(a[s]=e[s])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),s=t;return e&&(s="function"==typeof e?e(t):i({},t,{},e)),s},p=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var s=e.components,n=e.mdxType,o=e.originalType,r=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=b(s),u=n,m=p["".concat(r,".").concat(u)]||p[u]||d[u]||o;return s?a.a.createElement(m,i({ref:t},l,{components:s})):a.a.createElement(m,i({ref:t},l))}));function m(e,t){var s=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=s.length,r=new Array(o);r[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,r[1]=i;for(var l=2;l<o;l++)r[l]=s[l];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,s)}u.displayName="MDXCreateElement"}}]);